<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        g8hc4Sq6GgAAAABJRU5ErkJggg==
</value>
  </data>
</root>